package threadstudy;

import java.util.Objects;
import java.util.concurrent.*;

public class TestThread4 {

    private static void test1() throws ExecutionException, InterruptedException {
        Callable<String> callable = new Callable<String>() {
            @Override
            public String call() throws Exception {
                System.out.println(Thread.currentThread().getName()+":call");
                return "call finish";
            }
        };

        ExecutorService pool = Executors.newFixedThreadPool(1);
        Future future = pool.submit(callable);

        System.out.println(Thread.currentThread().getName()+ ": pool submit ,before get()" );
        System.out.println(future.get());
        pool.shutdownNow();
    }
    public static void main(String[] args) throws ExecutionException, InterruptedException {
        test1();
    }
}
